version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: ${DB_HOST}
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - laravel-network

  php1:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: laravel_php1
    restart: unless-stopped
    environment:
      - SERVER_ID=1
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - APP_URL=${APP_URL_1}
    volumes:
      - ./app:/var/www/html
      - ./custom/server-ID_welcome.blade.php:/var/www/html/resources/views/welcome.blade.php
    depends_on:
      - db
    networks:
      - laravel-network

  nginx1:
    image: nginx:latest
    container_name: laravel_nginx1
    restart: unless-stopped
    ports:
      - "8081:80"
    volumes:
      - ./app:/var/www/html
      - ./conf/nginx1.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php1
    networks:
      - laravel-network

  php2:
    build:
      context: ./
      dockerfile: Dockerfile
    container_name: laravel_php2
    restart: unless-stopped
    environment:
      - SERVER_ID=2
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_DATABASE=${DB_DATABASE}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - APP_URL=${APP_URL_1}
    volumes:
      - ./app:/var/www/html
      - ./custom/server-ID_welcome.blade.php:/var/www/html/resources/views/welcome.blade.php
    depends_on:
      - db
    networks:
      - laravel-network

  nginx2:
    image: nginx:latest
    container_name: laravel_nginx2
    restart: unless-stopped
    ports:
      - "8082:80"
    volumes:
      - ./app:/var/www/html
      - ./conf/nginx2.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - php2
    networks:
      - laravel-network

  mailhog:
    image: mailhog/mailhog
    container_name: laravel_mailhog
    restart: unless-stopped
    ports:
      - "8025:8025"
      - "1025:1025"
    networks:
      - laravel-network

  caddy:
    image: caddy:latest
    container_name: ${CADDY_HOST}
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./conf/caddyfile:/etc/caddy/Caddyfile
      - ./conf:/config
      - ./conf:/data
    networks:
      - laravel-network
    command: ["caddy", "run", "--config", "/etc/caddy/Caddyfile", "--watch"]

volumes:
  db_data:
    name: laravel-mysql-data

networks:
  laravel-network:
    driver: bridge
